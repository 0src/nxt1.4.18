2018-01-29 00:58:16 INFO: nxt.enableStackTraces = "true"
2018-01-29 00:58:16 INFO: nxt.enableLogTraceback = "false"
2018-01-29 00:58:16 INFO: logging enabled
2018-01-29 00:58:16 FINE: java.version = 9.0.1
2018-01-29 00:58:16 FINE: java.vm.version = 9.0.1+11
2018-01-29 00:58:16 FINE: java.vm.name = Java HotSpot(TM) 64-Bit Server VM
2018-01-29 00:58:16 FINE: java.vendor = Oracle Corporation
2018-01-29 00:58:16 FINE: java.vm.vendor = Oracle Corporation
2018-01-29 00:58:16 FINE: java.home = C:\Program Files\Java\jre-9.0.1
2018-01-29 00:58:16 FINE: java.library.path = C:\ProgramData\Oracle\Java\javapath;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;.
2018-01-29 00:58:16 FINE: java.class.path = classes;lib\bcprov-jdk15on-151.jar;lib\h2-1.3.176.jar;lib\jetty-continuation-9.2.9.v20150224.jar;lib\jetty-http-9.2.9.v20150224.jar;lib\jetty-io-9.2.9.v20150224.jar;lib\jetty-security-9.2.9.v20150224.jar;lib\jetty-server-9.2.9.v20150224.jar;lib\jetty-servlet-9.2.9.v20150224.jar;lib\jetty-servlets-9.2.9.v20150224.jar;lib\jetty-util-9.2.9.v20150224.jar;lib\json-simple-1.1.1.jar;lib\lucene-core-3.6.2.jar;lib\servlet-api-3.1.jar;lib\slf4j-api-1.7.7.jar;lib\slf4j-jdk14-1.7.7.jar;conf
2018-01-29 00:58:16 FINE: os.arch = amd64
2018-01-29 00:58:16 FINE: sun.arch.data.model = 64
2018-01-29 00:58:16 FINE: os.name = Windows Server 2012 R2
2018-01-29 00:58:16 FINE: file.encoding = Cp1252
2018-01-29 00:58:16 FINE: availableProcessors = 12
2018-01-29 00:58:16 FINE: maxMemory = 2130706432
2018-01-29 00:58:16 INFO: nxt.dbCacheKB = "0"
2018-01-29 00:58:16 INFO: nxt.maxRollback = "1441"
2018-01-29 00:58:16 INFO: nxt.forgingDelay = "20"
2018-01-29 00:58:16 INFO: nxt.forgingSpeedup = "3"
2018-01-29 00:58:16 INFO: nxt.isTestnet = "false"
2018-01-29 00:58:16 INFO: nxt.isOffline = "false"
2018-01-29 00:58:16 INFO: nxt.dbUrl = "jdbc:h2:nxt_db/nxt;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE"
2018-01-29 00:58:16 INFO: nxt.maxDbConnections = "30"
2018-01-29 00:58:16 INFO: nxt.dbLoginTimeout = "70"
2018-01-29 00:58:16 INFO: nxt.dbDefaultLockTimeout = "60"
2018-01-29 00:58:16 FINE: Database jdbc url set to: jdbc:h2:nxt_db/nxt;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;CACHE_SIZE=262144
2018-01-29 00:58:16 FINE: Database connection pool current size: 1
2018-01-29 00:58:16 INFO: Initializing an empty database
2018-01-29 00:58:16 FINE: Database connection pool current size: 2
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS block (db_id IDENTITY, id BIGINT NOT NULL, version INT NOT NULL, timestamp INT NOT NULL, previous_block_id BIGINT, FOREIGN KEY (previous_block_id) REFERENCES block (id) ON DELETE CASCADE, total_amount INT NOT NULL, total_fee INT NOT NULL, payload_length INT NOT NULL, generator_public_key BINARY(32) NOT NULL, previous_block_hash BINARY(32), cumulative_difficulty VARBINARY NOT NULL, base_target BIGINT NOT NULL, next_block_id BIGINT, FOREIGN KEY (next_block_id) REFERENCES block (id) ON DELETE SET NULL, index INT NOT NULL, height INT NOT NULL, generation_signature BINARY(64) NOT NULL, block_signature BINARY(64) NOT NULL, payload_hash BINARY(32) NOT NULL, generator_account_id BIGINT NOT NULL)
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS block_id_idx ON block (id)
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS transaction (db_id IDENTITY, id BIGINT NOT NULL, deadline SMALLINT NOT NULL, sender_public_key BINARY(32) NOT NULL, recipient_id BIGINT NOT NULL, amount INT NOT NULL, fee INT NOT NULL, referenced_transaction_id BIGINT, index INT NOT NULL, height INT NOT NULL, block_id BIGINT NOT NULL, FOREIGN KEY (block_id) REFERENCES block (id) ON DELETE CASCADE, signature BINARY(64) NOT NULL, timestamp INT NOT NULL, type TINYINT NOT NULL, subtype TINYINT NOT NULL, sender_account_id BIGINT NOT NULL, attachment OTHER)
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS transaction_id_idx ON transaction (id)
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS block_height_idx ON block (height)
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS transaction_timestamp_idx ON transaction (timestamp)
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS block_generator_account_id_idx ON block (generator_account_id)
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS transaction_sender_account_id_idx ON transaction (sender_account_id)
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS transaction_recipient_id_idx ON transaction (recipient_id)
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE block ALTER COLUMN generator_account_id RENAME TO generator_id
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ALTER COLUMN sender_account_id RENAME TO sender_id
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER INDEX block_generator_account_id_idx RENAME TO block_generator_id_idx
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER INDEX transaction_sender_account_id_idx RENAME TO transaction_sender_id_idx
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE block DROP COLUMN IF EXISTS index
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction DROP COLUMN IF EXISTS index
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS block_timestamp INT
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ALTER COLUMN block_timestamp SET NOT NULL
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS hash BINARY(32)
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS transaction_hash_idx ON transaction (hash)
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE block ALTER COLUMN total_amount BIGINT
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE block ALTER COLUMN total_fee BIGINT
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ALTER COLUMN amount BIGINT
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ALTER COLUMN fee BIGINT
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS peer (address VARCHAR PRIMARY KEY)
2018-01-29 00:58:16 FINE: Will apply sql:
INSERT INTO peer (address) VALUES ('81.220.60.240'), ('nxt3.webice.ru'), ('nxtx.ru'), ('162.243.87.10'), ('80.153.101.190'), ('185.12.44.108'), ('79.145.11.180'), ('95.85.31.45'), ('81.169.150.141'), ('megaman.thican.net'), ('54.65.93.59'), ('23.88.59.163'), ('213.46.57.77'), ('37.59.115.204'), ('54.245.255.250'), ('178.62.185.131'), ('82.0.149.148'), ('gunka.szn.dk'), ('104.219.53.3'), ('txn14.cloudapp.net'), ('46.4.35.166'), ('80.150.243.95'), ('80.150.243.97'), ('pakisnxt.no-ip.org'), ('46.109.89.219'), ('5.196.227.91'), ('185.61.148.216'), ('miasik.no-ip.org'), ('213.239.201.57'), ('192.99.68.108'), ('107.170.43.82'), ('node7.mynxtcoin.org'), ('54.72.170.192'), ('23.88.59.40'), ('54.214.250.209'), ('nxt01.now.im'), ('54.65.215.219'), ('54.154.46.55'), ('78.46.198.253'), ('jnxt.org'), ('108.61.57.76'), ('91.202.253.240'), ('80.150.243.10'), ('80.150.243.11'), ('87.138.143.21'), ('46.246.44.44'), ('113.106.85.172'), ('78.56.100.171'), ('84.195.25.169'), ('cryptkeeper.vps.nxtcrypto.org'), ('128.199.112.173'), ('89.250.240.63'), ('89.250.240.60'), ('sluni.szn.dk'), ('91.214.169.126'), ('54.213.222.141'), ('zdani.szn.dk'), ('107.170.164.129'), ('nxtnode.hopto.org'), ('82.46.194.21'), ('121.42.137.198'), ('54.68.43.61'), ('54.69.53.67'), ('84.242.91.139'), ('54.83.4.11'), ('184.164.72.177'), ('enricoip.no-ip.biz'), ('nxt8.webice.ru'), ('162.243.122.251'), ('78.106.115.210'), ('84.253.125.186'), ('node5.mynxtcoin.org'), ('178.24.154.23'), ('1.34.219.47'), ('134.119.24.206'), ('85.25.198.120'), ('dilnu.szn.dk'), ('178.150.207.53'), ('nxt.sx'), ('nxt5.webice.ru'), ('85.84.67.68'), ('107.155.87.235'), ('85.25.43.169'), ('23.89.192.151'), ('95.215.44.229'), ('174.140.166.124'), ('87.139.122.48'), ('23.92.53.243'), ('87.139.122.157'), ('5.147.113.212'), ('ct.flipflop.mooo.com'), ('nxt.alkeron.com'), ('67.212.71.173'), ('nxt9.webice.ru'), ('nxt.hopto.me'), ('77.88.208.12'), ('66.30.204.105'), ('188.40.96.10'), ('62.194.6.163'), ('217.17.88.5'), ('41.242.1.239'), ('89.212.19.49'), ('162.243.242.8'), ('162.220.240.171'), ('109.254.63.44'), ('beor.homeip.net'), ('2.225.88.10'), ('91.121.150.75'), ('dorcsforge.cloudapp.net'), ('nxt.cybermailing.com'), ('46.28.111.249'), ('209.126.70.159'), ('178.15.99.67'), ('104.131.254.22'), ('198.211.127.34'), ('191.238.101.73'), ('vps.krusherpt.com'), ('vh44.ddns.net:7873'), ('77.58.253.73'), ('198.57.198.33'), ('92.222.72.98'), ('178.20.9.9'), ('81.23.22.150'), ('23.102.0.45'), ('88.163.78.131'), ('54.169.132.50'), ('37.59.14.7'), ('85.214.222.82'), ('nacho.damnserver.com'), ('103.25.59.185'), ('54.69.182.12'), ('89.72.57.246'), ('209.222.2.110'), ('78.46.92.78'), ('192.3.158.120'), ('107.170.75.92'), ('bug.airdns.org'), ('91.98.139.194'), ('37.187.238.130'), ('195.154.111.47'), ('37.187.21.28'), ('node4.mynxtcoin.org'), ('scripterron.dyndns.biz'), ('82.165.145.37'), ('94.26.187.66'), ('node2.krusherpt.com'), ('node0.forgenxt.com'), ('198.199.95.15'), ('88.188.122.73'), ('95.116.255.148'), ('91.69.121.207'), ('178.33.203.157'), ('node6.mynxtcoin.org'), ('54.149.167.132'), ('190.10.9.166'), ('24.149.126.206'), ('132.230.76.160'), ('humanoide.thican.net')
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS full_hash BINARY(32)
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS referenced_transaction_full_hash BINARY(32)
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ALTER COLUMN full_hash SET NOT NULL
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS transaction_full_hash_idx ON transaction (full_hash)
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS attachment_bytes VARBINARY
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction DROP COLUMN attachment
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction DROP COLUMN referenced_transaction_id
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction DROP COLUMN hash
2018-01-29 00:58:16 FINE: Will apply sql:
DROP INDEX transaction_recipient_id_idx
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ALTER COLUMN recipient_id SET NULL
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS public_key (db_id IDENTITY, account_id BIGINT NOT NULL, public_key BINARY(32), height INT NOT NULL, FOREIGN KEY (height) REFERENCES block (height) ON DELETE CASCADE)
2018-01-29 00:58:16 INFO: Deleting blockchain...
2018-01-29 00:58:16 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS transaction_recipient_id_idx ON transaction (recipient_id)
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS version TINYINT
2018-01-29 00:58:16 FINE: Will apply sql:
UPDATE transaction SET version = 0
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ALTER COLUMN version SET NOT NULL
2018-01-29 00:58:16 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS has_message BOOLEAN NOT NULL DEFAULT FALSE
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS has_encrypted_message BOOLEAN NOT NULL DEFAULT FALSE
2018-01-29 00:58:17 FINE: Will apply sql:
UPDATE transaction SET has_message = TRUE WHERE type = 1 AND subtype = 0
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS has_public_key_announcement BOOLEAN NOT NULL DEFAULT FALSE
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS ec_block_height INT DEFAULT NULL
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS ec_block_id BIGINT DEFAULT NULL
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS has_encrypttoself_message BOOLEAN NOT NULL DEFAULT FALSE
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS transaction_block_timestamp_idx ON transaction (block_timestamp DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
DROP INDEX transaction_timestamp_idx
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS alias (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, alias_name VARCHAR NOT NULL, alias_name_lower VARCHAR AS LOWER (alias_name) NOT NULL, alias_uri VARCHAR NOT NULL, timestamp INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS alias_id_height_idx ON alias (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS alias_account_id_idx ON alias (account_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS alias_name_lower_idx ON alias (alias_name_lower)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS alias_offer (db_id IDENTITY, id BIGINT NOT NULL, price BIGINT NOT NULL, buyer_id BIGINT, height INT NOT NULL, latest BOOLEAN DEFAULT TRUE NOT NULL)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS alias_offer_id_height_idx ON alias_offer (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS asset (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, name VARCHAR NOT NULL, description VARCHAR, quantity BIGINT NOT NULL, decimals TINYINT NOT NULL, height INT NOT NULL)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS asset_id_idx ON asset (id)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_account_id_idx ON asset (account_id)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS trade (db_id IDENTITY, asset_id BIGINT NOT NULL, block_id BIGINT NOT NULL, ask_order_id BIGINT NOT NULL, bid_order_id BIGINT NOT NULL, ask_order_height INT NOT NULL, bid_order_height INT NOT NULL, seller_id BIGINT NOT NULL, buyer_id BIGINT NOT NULL, quantity BIGINT NOT NULL, price BIGINT NOT NULL, timestamp INT NOT NULL, height INT NOT NULL)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS trade_ask_bid_idx ON trade (ask_order_id, bid_order_id)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS trade_asset_id_idx ON trade (asset_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS trade_seller_id_idx ON trade (seller_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS trade_buyer_id_idx ON trade (buyer_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS ask_order (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, asset_id BIGINT NOT NULL, price BIGINT NOT NULL, quantity BIGINT NOT NULL, creation_height INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS ask_order_id_height_idx ON ask_order (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS ask_order_account_id_idx ON ask_order (account_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS ask_order_asset_id_price_idx ON ask_order (asset_id, price)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS bid_order (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, asset_id BIGINT NOT NULL, price BIGINT NOT NULL, quantity BIGINT NOT NULL, creation_height INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS bid_order_id_height_idx ON bid_order (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS bid_order_account_id_idx ON bid_order (account_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS bid_order_asset_id_price_idx ON bid_order (asset_id, price DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS goods (db_id IDENTITY, id BIGINT NOT NULL, seller_id BIGINT NOT NULL, name VARCHAR NOT NULL, description VARCHAR, tags VARCHAR, timestamp INT NOT NULL, quantity INT NOT NULL, price BIGINT NOT NULL, delisted BOOLEAN NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS goods_id_height_idx ON goods (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS goods_seller_id_name_idx ON goods (seller_id, name)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS goods_timestamp_idx ON goods (timestamp DESC, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS purchase (db_id IDENTITY, id BIGINT NOT NULL, buyer_id BIGINT NOT NULL, goods_id BIGINT NOT NULL, seller_id BIGINT NOT NULL, quantity INT NOT NULL, price BIGINT NOT NULL, deadline INT NOT NULL, note VARBINARY, nonce BINARY(32), timestamp INT NOT NULL, pending BOOLEAN NOT NULL, goods VARBINARY, goods_nonce BINARY(32), refund_note VARBINARY, refund_nonce BINARY(32), has_feedback_notes BOOLEAN NOT NULL DEFAULT FALSE, has_public_feedbacks BOOLEAN NOT NULL DEFAULT FALSE, discount BIGINT NOT NULL, refund BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS purchase_id_height_idx ON purchase (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_buyer_id_height_idx ON purchase (buyer_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_seller_id_height_idx ON purchase (seller_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_deadline_idx ON purchase (deadline DESC, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account (db_id IDENTITY, id BIGINT NOT NULL, creation_height INT NOT NULL, public_key BINARY(32), key_height INT, balance BIGINT NOT NULL, unconfirmed_balance BIGINT NOT NULL, forged_balance BIGINT NOT NULL, name VARCHAR, description VARCHAR, current_leasing_height_from INT, current_leasing_height_to INT, current_lessee_id BIGINT NULL, next_leasing_height_from INT, next_leasing_height_to INT, next_lessee_id BIGINT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_id_height_idx ON account (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_current_lessee_id_leasing_height_idx ON account (current_lessee_id, current_leasing_height_to DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account_asset (db_id IDENTITY, account_id BIGINT NOT NULL, asset_id BIGINT NOT NULL, quantity BIGINT NOT NULL, unconfirmed_quantity BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_asset_id_height_idx ON account_asset (account_id, asset_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account_guaranteed_balance (db_id IDENTITY, account_id BIGINT NOT NULL, additions BIGINT NOT NULL, height INT NOT NULL)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_guaranteed_balance_id_height_idx ON account_guaranteed_balance (account_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS purchase_feedback (db_id IDENTITY, id BIGINT NOT NULL, feedback_data VARBINARY NOT NULL, feedback_nonce BINARY(32) NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_feedback_id_height_idx ON purchase_feedback (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS purchase_public_feedback (db_id IDENTITY, id BIGINT NOT NULL, public_feedback VARCHAR NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_public_feedback_id_height_idx ON purchase_public_feedback (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS unconfirmed_transaction (db_id IDENTITY, id BIGINT NOT NULL, expiration INT NOT NULL, transaction_height INT NOT NULL, fee_per_byte BIGINT NOT NULL, timestamp INT NOT NULL, transaction_bytes VARBINARY NOT NULL, height INT NOT NULL)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS unconfirmed_transaction_id_idx ON unconfirmed_transaction (id)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS unconfirmed_transaction_height_fee_timestamp_idx ON unconfirmed_transaction (transaction_height ASC, fee_per_byte DESC, timestamp ASC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS asset_transfer (db_id IDENTITY, id BIGINT NOT NULL, asset_id BIGINT NOT NULL, sender_id BIGINT NOT NULL, recipient_id BIGINT NOT NULL, quantity BIGINT NOT NULL, timestamp INT NOT NULL, height INT NOT NULL)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS asset_transfer_id_idx ON asset_transfer (id)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_transfer_asset_id_idx ON asset_transfer (asset_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_transfer_sender_id_idx ON asset_transfer (sender_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_transfer_recipient_id_idx ON asset_transfer (recipient_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_asset_quantity_idx ON account_asset (quantity DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_timestamp_idx ON purchase (timestamp DESC, id)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS ask_order_creation_idx ON ask_order (creation_height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS bid_order_creation_idx ON bid_order (creation_height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS block_timestamp_idx ON block (timestamp DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE goods ADD COLUMN IF NOT EXISTS parsed_tags ARRAY
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE ALIAS IF NOT EXISTS FTL_INIT FOR "org.h2.fulltext.FullTextLucene.init"
2018-01-29 00:58:17 FINE: Will apply sql:
CALL FTL_INIT()
2018-01-29 00:58:17 FINE: Will apply sql:
CALL FTL_CREATE_INDEX('PUBLIC', 'GOODS', 'NAME,DESCRIPTION,TAGS')
2018-01-29 00:58:17 FINE: Will apply sql:
CALL FTL_CREATE_INDEX('PUBLIC', 'ASSET', 'NAME,DESCRIPTION')
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS tag (db_id IDENTITY, tag VARCHAR NOT NULL, in_stock_count INT NOT NULL, total_count INT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS tag_tag_idx ON tag (tag, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tag_in_stock_count_idx ON tag (in_stock_count DESC, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS currency (db_id IDENTITY, id BIGINT NOT NULL, account_id BIGINT NOT NULL, name VARCHAR NOT NULL, name_lower VARCHAR AS LOWER (name) NOT NULL, code VARCHAR NOT NULL, description VARCHAR, type INT NOT NULL, initial_supply BIGINT NOT NULL DEFAULT 0, current_supply BIGINT NOT NULL, reserve_supply BIGINT NOT NULL, max_supply BIGINT NOT NULL, creation_height INT NOT NULL, issuance_height INT NOT NULL, min_reserve_per_unit_nqt BIGINT NOT NULL, min_difficulty TINYINT NOT NULL, max_difficulty TINYINT NOT NULL, ruleset TINYINT NOT NULL, algorithm TINYINT NOT NULL, current_reserve_per_unit_nqt BIGINT NOT NULL, decimals TINYINT NOT NULL DEFAULT 0,height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS currency_id_height_idx ON currency (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_account_id_idx ON currency (account_id)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS account_currency (db_id IDENTITY, account_id BIGINT NOT NULL, currency_id BIGINT NOT NULL, units BIGINT NOT NULL, unconfirmed_units BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS account_currency_id_height_idx ON account_currency (account_id, currency_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS currency_founder (db_id IDENTITY, currency_id BIGINT NOT NULL, account_id BIGINT NOT NULL, amount BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS currency_founder_currency_id_idx ON currency_founder (currency_id, account_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS currency_mint (db_id IDENTITY, currency_id BIGINT NOT NULL, account_id BIGINT NOT NULL, counter BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS currency_mint_currency_id_account_id_idx ON currency_mint (currency_id, account_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS buy_offer (db_id IDENTITY, id BIGINT NOT NULL, currency_id BIGINT NOT NULL, account_id BIGINT NOT NULL,rate BIGINT NOT NULL, unit_limit BIGINT NOT NULL, supply BIGINT NOT NULL, expiration_height INT NOT NULL,creation_height INT NOT NULL, transaction_index SMALLINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS buy_offer_id_idx ON buy_offer (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS buy_offer_currency_id_account_id_idx ON buy_offer (currency_id, account_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS sell_offer (db_id IDENTITY, id BIGINT NOT NULL, currency_id BIGINT NOT NULL, account_id BIGINT NOT NULL, rate BIGINT NOT NULL, unit_limit BIGINT NOT NULL, supply BIGINT NOT NULL, expiration_height INT NOT NULL, creation_height INT NOT NULL, transaction_index SMALLINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS sell_offer_id_idx ON sell_offer (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS sell_offer_currency_id_account_id_idx ON sell_offer (currency_id, account_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS exchange (db_id IDENTITY, transaction_id BIGINT NOT NULL, currency_id BIGINT NOT NULL, block_id BIGINT NOT NULL, offer_id BIGINT NOT NULL, seller_id BIGINT NOT NULL, buyer_id BIGINT NOT NULL, units BIGINT NOT NULL, rate BIGINT NOT NULL, timestamp INT NOT NULL, height INT NOT NULL)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS exchange_offer_idx ON exchange (transaction_id, offer_id)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_currency_id_idx ON exchange (currency_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_seller_id_idx ON exchange (seller_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_buyer_id_idx ON exchange (buyer_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS currency_transfer (db_id IDENTITY, id BIGINT NOT NULL, currency_id BIGINT NOT NULL, sender_id BIGINT NOT NULL, recipient_id BIGINT NOT NULL, units BIGINT NOT NULL, timestamp INT NOT NULL, height INT NOT NULL)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS currency_transfer_id_idx ON currency_transfer (id)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_transfer_currency_id_idx ON currency_transfer (currency_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_transfer_sender_id_idx ON currency_transfer (sender_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_transfer_recipient_id_idx ON currency_transfer (recipient_id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_currency_units_idx ON account_currency (units DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_name_idx ON currency (name_lower, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_code_idx ON currency (code, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS buy_offer_rate_height_idx ON buy_offer (rate DESC, creation_height ASC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS sell_offer_rate_height_idx ON sell_offer (rate ASC, creation_height ASC)
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE account ADD COLUMN IF NOT EXISTS message_pattern_regex VARCHAR
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE account ADD COLUMN IF NOT EXISTS message_pattern_flags INT
2018-01-29 00:58:17 FINE: Will apply sql:
DROP INDEX IF EXISTS unconfirmed_transaction_height_fee_timestamp_idx
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE unconfirmed_transaction DROP COLUMN IF EXISTS timestamp
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE unconfirmed_transaction ADD COLUMN IF NOT EXISTS arrival_timestamp BIGINT NOT NULL DEFAULT 0
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS unconfirmed_transaction_height_fee_timestamp_idx ON unconfirmed_transaction (transaction_height ASC, fee_per_byte DESC, arrival_timestamp ASC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS public_key (db_id IDENTITY, account_id BIGINT NOT NULL, public_key BINARY(32), height INT NOT NULL, FOREIGN KEY (height) REFERENCES block (height) ON DELETE CASCADE)
2018-01-29 00:58:17 INFO: Deleting blockchain...
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE transaction ADD COLUMN IF NOT EXISTS transaction_index SMALLINT NOT NULL
2018-01-29 00:58:17 FINE: Will apply sql:
TRUNCATE TABLE ask_order
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE ask_order ADD COLUMN IF NOT EXISTS transaction_index SMALLINT NOT NULL
2018-01-29 00:58:17 FINE: Will apply sql:
TRUNCATE TABLE bid_order
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE bid_order ADD COLUMN IF NOT EXISTS transaction_index SMALLINT NOT NULL
2018-01-29 00:58:17 FINE: Will apply sql:
CALL FTL_CREATE_INDEX('PUBLIC', 'CURRENCY', 'CODE,NAME,DESCRIPTION')
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS scan (rescan BOOLEAN NOT NULL DEFAULT FALSE, height INT NOT NULL DEFAULT 0, validate BOOLEAN NOT NULL DEFAULT FALSE)
2018-01-29 00:58:17 FINE: Will apply sql:
INSERT INTO scan (rescan, height, validate) VALUES (false, 0, false)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_creation_height_idx ON currency (creation_height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS currency_supply (db_id IDENTITY, id BIGINT NOT NULL, current_supply BIGINT NOT NULL, current_reserve_per_unit_nqt BIGINT NOT NULL, height INT NOT NULL, latest BOOLEAN NOT NULL DEFAULT TRUE)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS currency_supply_id_height_idx ON currency_supply (id, height DESC)
2018-01-29 00:58:17 FINE: Will apply sql:
TRUNCATE TABLE currency
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE currency DROP COLUMN IF EXISTS current_supply
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE currency DROP COLUMN IF EXISTS current_reserve_per_unit_nqt
2018-01-29 00:58:17 INFO: nxt.trimDerivedTables = "true"
2018-01-29 00:58:17 INFO: nxt.numberOfForkConfirmations = "2"
2018-01-29 00:58:17 INFO: nxt.disableGetMoreBlocksThread not defined, assuming false
2018-01-29 00:58:17 FINE: Scheduled scan starting from height 0
2018-01-29 00:58:17 FINE: Will apply sql:
CALL FTL_REINDEX()
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE TABLE IF NOT EXISTS public_key (db_id IDENTITY, account_id BIGINT NOT NULL, public_key BINARY(32), height INT NOT NULL, FOREIGN KEY (height) REFERENCES block (height) ON DELETE CASCADE)
2018-01-29 00:58:17 FINE: Will apply sql:
INSERT INTO public_key (account_id, public_key, height) SELECT id, public_key, min(height) FROM account WHERE public_key IS NOT NULL GROUP BY id
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE UNIQUE INDEX IF NOT EXISTS public_key_account_id_idx ON public_key (account_id)
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE account DROP COLUMN IF EXISTS public_key
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE block DROP COLUMN IF EXISTS generator_public_key
2018-01-29 00:58:17 FINE: Will apply sql:
ALTER TABLE transaction DROP COLUMN IF EXISTS sender_public_key
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_height_idx ON account(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_asset_height_idx ON account_asset(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_currency_height_idx ON account_currency(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS account_guaranteed_balance_height_idx ON account_guaranteed_balance(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS alias_height_idx ON alias(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS alias_offer_height_idx ON alias_offer(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS ask_order_height_idx ON ask_order(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_height_idx ON asset(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS asset_transfer_height_idx ON asset_transfer(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS bid_order_height_idx ON bid_order(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS buy_offer_height_idx ON buy_offer(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_height_idx ON currency(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_founder_height_idx ON currency_founder(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_mint_height_idx ON currency_mint(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_supply_height_idx ON currency_supply(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS currency_transfer_height_idx ON currency_transfer(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS exchange_height_idx ON exchange(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS goods_height_idx ON goods(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS public_key_height_idx ON public_key(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_height_idx ON purchase(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_feedback_height_idx ON purchase_feedback(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS purchase_public_feedback_height_idx ON purchase_public_feedback(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS sell_offer_height_idx ON sell_offer(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS tag_height_idx ON tag(height)
2018-01-29 00:58:17 FINE: Will apply sql:
CREATE INDEX IF NOT EXISTS trade_height_idx ON trade(height)
2018-01-29 00:58:17 INFO: nxt.enableTransactionRebroadcasting = "true"
2018-01-29 00:58:17 INFO: nxt.testUnconfirmedTransactions not defined, assuming false
2018-01-29 00:58:17 INFO: nxt.disableProcessTransactionsThread not defined, assuming false
2018-01-29 00:58:17 INFO: nxt.disableRemoveUnconfirmedTransactionsThread not defined, assuming false
2018-01-29 00:58:17 INFO: nxt.disableRebroadcastTransactionsThread not defined, assuming false
2018-01-29 00:58:17 INFO: nxt.myPlatform = "PC"
2018-01-29 00:58:17 INFO: nxt.myAddress not defined
2018-01-29 00:58:17 INFO: nxt.peerServerPort = "7874"
2018-01-29 00:58:17 INFO: nxt.shareMyAddress = "true"
2018-01-29 00:58:17 INFO: nxt.myHallmark not defined
2018-01-29 00:58:17 FINE: My peer info:
{"application":"NRS","version":"1.4.18","platform":"PC","shareAddress":true}
2018-01-29 00:58:17 INFO: nxt.wellKnownPeers not defined
2018-01-29 00:58:17 INFO: nxt.knownBlacklistedPeers not defined
2018-01-29 00:58:17 INFO: nxt.maxNumberOfConnectedPublicPeers = "20"
2018-01-29 00:58:17 INFO: nxt.maxNumberOfKnownPeers = "2000"
2018-01-29 00:58:17 INFO: nxt.minNumberOfKnownPeers = "1000"
2018-01-29 00:58:17 INFO: nxt.connectTimeout = "10000"
2018-01-29 00:58:17 INFO: nxt.readTimeout = "20000"
2018-01-29 00:58:17 INFO: nxt.enableHallmarkProtection = "true"
2018-01-29 00:58:17 INFO: nxt.pushThreshold = "0"
2018-01-29 00:58:17 INFO: nxt.pullThreshold = "0"
2018-01-29 00:58:17 INFO: nxt.blacklistingPeriod = "600000"
2018-01-29 00:58:17 INFO: nxt.communicationLoggingMask = "0"
2018-01-29 00:58:17 INFO: nxt.sendToPeersLimit = "10"
2018-01-29 00:58:17 INFO: nxt.usePeersDb = "true"
2018-01-29 00:58:17 INFO: nxt.savePeers = "true"
2018-01-29 00:58:17 INFO: nxt.getMorePeers = "true"
2018-01-29 00:58:17 INFO: nxt.dumpPeersVersion not defined
2018-01-29 00:58:17 INFO: nxt.disablePeerConnectingThread not defined, assuming false
2018-01-29 00:58:17 INFO: nxt.disablePeerUnBlacklistingThread not defined, assuming false
2018-01-29 00:58:17 INFO: nxt.disableGetMorePeersThread not defined, assuming false
2018-01-29 00:58:17 INFO: nxt.peerServerHost = "0.0.0.0"
2018-01-29 00:58:17 INFO: nxt.peerServerIdleTimeout = "30000"
2018-01-29 00:58:17 INFO: nxt.enablePeerServerGZIPFilter = "true"
2018-01-29 00:58:17 INFO: nxt.enablePeerServerDoSFilter = "true"
2018-01-29 00:58:17 INFO: nxt.peerServerDoSFilter.maxRequestsPerSec = "30"
2018-01-29 00:58:17 INFO: nxt.peerServerDoSFilter.delayMs = "1000"
2018-01-29 00:58:17 INFO: nxt.peerServerDoSFilter.maxRequestMs = "300000"
2018-01-29 00:58:17 INFO: nxt.enableFakeForging not defined, assuming false
2018-01-29 00:58:17 INFO: nxt.disableGenerateBlocksThread not defined, assuming false
2018-01-29 00:58:17 INFO: nxt.adminPassword not defined
2018-01-29 00:58:17 INFO: nxt.allowedBotHosts = "127.0.0.1; localhost; [0:0:0:0:0:0:0:1];"
2018-01-29 00:58:17 INFO: nxt.enableAPIServer = "true"
2018-01-29 00:58:17 INFO: nxt.apiServerPort = "7876"
2018-01-29 00:58:17 INFO: nxt.apiServerHost = "127.0.0.1"
2018-01-29 00:58:17 INFO: nxt.disableAdminPassword = "false"
2018-01-29 00:58:17 INFO: nxt.apiSSL = "false"
2018-01-29 00:58:17 INFO: nxt.apiServerIdleTimeout = "30000"
2018-01-29 00:58:17 INFO: nxt.apiResourceBase = "html/ui"
2018-01-29 00:58:17 INFO: nxt.apiWelcomeFile = "index.html"
2018-01-29 00:58:17 INFO: nxt.javadocResourceBase = "html/doc"
2018-01-29 00:58:17 INFO: nxt.enableAPIServerGZIPFilter = "false"
2018-01-29 00:58:17 INFO: nxt.apiServerCORS = "false"
2018-01-29 00:58:17 INFO: nxt.allowedUserHosts = "127.0.0.1; localhost; [0:0:0:0:0:0:0:1];"
2018-01-29 00:58:17 INFO: nxt.enableUIServer = "false"
2018-01-29 00:58:17 INFO: User interface server not enabled
2018-01-29 00:58:17 INFO: nxt.debugTraceQuote = """
2018-01-29 00:58:17 INFO: nxt.debugTraceSeparator = "	"
2018-01-29 00:58:17 INFO: nxt.debugLogUnconfirmed = "false"
2018-01-29 00:58:17 INFO: nxt.debugTraceAccounts not defined
2018-01-29 00:58:17 INFO: nxt.debugTraceLog = "nxt-trace.csv"
2018-01-29 00:58:17 FINE: Running 2 tasks...
2018-01-29 00:58:17 FINE: Loading known peers from the database...
2018-01-29 00:58:17 INFO: Genesis block not in database, starting from scratch
2018-01-29 00:58:18 INFO: nxt.forceScan = "false"
2018-01-29 00:58:18 FINE: Scheduled scan starting from height 0
2018-01-29 00:58:18 INFO: Scanning blockchain starting from height 0...
2018-01-29 00:58:18 FINE: Rolled back derived tables
2018-01-29 00:58:18 INFO: processed block 0
2018-01-29 00:58:18 INFO: ...done at height 0
2018-01-29 00:58:18 FINE: Running 2 final tasks...
2018-01-29 00:58:18 INFO: Started peer networking server at 0.0.0.0:7874
2018-01-29 00:58:18 INFO: Started API server at 127.0.0.1:7876
2018-01-29 00:58:18 FINE: Starting 8 background jobs
2018-01-29 00:58:18 FINE: Starting 2 delayed tasks
2018-01-29 00:58:18 INFO: Initialization took 2 seconds
2018-01-29 00:58:18 INFO: Nxt server 1.4.18 started successfully.
2018-01-29 00:58:18 FINE: Failed to resolve peer address: nxt3.webice.ru
2018-01-29 00:58:18 FINE: Failed to resolve peer address: gunka.szn.dk
2018-01-29 00:58:18 FINE: Failed to resolve peer address: txn14.cloudapp.net
2018-01-29 00:58:18 FINE: Failed to resolve peer address: pakisnxt.no-ip.org
2018-01-29 00:58:18 FINE: Failed to resolve peer address: miasik.no-ip.org
2018-01-29 00:58:18 FINE: Failed to resolve peer address: node7.mynxtcoin.org
2018-01-29 00:58:18 FINE: Failed to resolve peer address: nxtnode.hopto.org
2018-01-29 00:58:18 FINE: Failed to resolve peer address: nxt8.webice.ru
2018-01-29 00:58:18 FINE: Failed to resolve peer address: node5.mynxtcoin.org
2018-01-29 00:58:18 FINE: Failed to resolve peer address: dilnu.szn.dk
2018-01-29 00:58:18 FINE: Failed to resolve peer address: nxt.sx
2018-01-29 00:58:18 FINE: Failed to resolve peer address: nxt5.webice.ru
2018-01-29 00:58:18 FINE: Failed to resolve peer address: nxt.alkeron.com
2018-01-29 00:58:18 FINE: Failed to resolve peer address: nxt9.webice.ru
2018-01-29 00:58:18 FINE: Failed to resolve peer address: dorcsforge.cloudapp.net
2018-01-29 00:58:18 FINE: Failed to resolve peer address: vps.krusherpt.com
2018-01-29 00:58:18 FINE: Failed to resolve peer address: vh44.ddns.net:7873
2018-01-29 00:58:18 FINE: Failed to resolve peer address: node4.mynxtcoin.org
2018-01-29 00:58:18 FINE: Failed to resolve peer address: scripterron.dyndns.biz
2018-01-29 00:58:18 FINE: Failed to resolve peer address: node2.krusherpt.com
2018-01-29 00:58:18 FINE: Failed to resolve peer address: node6.mynxtcoin.org
2018-01-29 00:58:18 FINE: Known peers: 137
2018-01-29 00:58:29 INFO: nxt.apiServerEnforcePOST = "true"
2018-01-29 00:59:08 FINE: Peer 176.9.85.5 version 1.11.7 returned error: {"cause":"Old version: 1.4.18","error":"Your peer is blacklisted"}, request was: {"protocol":1,"requestType":"getUnconfirmedTransactions"}, disconnecting
2018-01-29 00:59:08 FINE: Peer 176.9.85.5 version 1.11.7 returned error: {"cause":"Old version: 1.4.18","error":"Your peer is blacklisted"}, request was: {"protocol":1,"requestType":"getPeers"}, disconnecting
2018-01-29 00:59:53 FINE: Peer 89.212.19.49 version 1.11.10 returned error: {"cause":"Old version: 1.4.18","error":"Your peer is blacklisted"}, request was: {"protocol":1,"requestType":"getUnconfirmedTransactions"}, disconnecting
2018-01-29 00:59:53 FINE: Peer 89.212.19.49 version 1.11.10 returned error: {"cause":"Old version: 1.4.18","error":"Your peer is blacklisted"}, request was: {"protocol":1,"requestType":"getPeers"}, disconnecting
2018-01-29 01:00:18 FINE: Peer 62.75.159.113 has new announced address nxt.notbot.me, old is nxt.cybermailing.com
2018-01-29 01:00:39 FINE: Peer 178.150.207.53 has new announced address nxt.noip.me, old is 178.150.207.53
2018-01-29 01:00:55 FINE: Peer 84.242.91.139 has new announced address nxt3.y.cz, old is 84.242.91.139
2018-01-29 01:03:13 FINE: Peer 87.138.143.21 version 1.11.9 returned error: {"cause":"Old version: 1.4.18","error":"Your peer is blacklisted"}, request was: {"protocol":1,"requestType":"getUnconfirmedTransactions"}, disconnecting
2018-01-29 01:03:13 FINE: Peer 87.138.143.21 version 1.11.9 returned error: {"cause":"Old version: 1.4.18","error":"Your peer is blacklisted"}, request was: {"protocol":1,"requestType":"getPeers"}, disconnecting
2018-01-29 01:03:58 FINE: Peer 79.21.122.207 version 1.11.12 returned error: {"cause":"Old version: 1.4.18","error":"Your peer is blacklisted"}, request was: {"protocol":1,"requestType":"getUnconfirmedTransactions"}, disconnecting
2018-01-29 01:04:03 FINE: Peer 87.139.122.48 version 1.11.9 returned error: {"cause":"Old version: 1.4.18","error":"Your peer is blacklisted"}, request was: {"protocol":1,"requestType":"getUnconfirmedTransactions"}, disconnecting
